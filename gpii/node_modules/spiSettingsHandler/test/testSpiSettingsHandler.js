var fluid = require("universal");
var jqUnit = fluid.require("jqUnit");
var spiSH = require("../src/SpiSettingsHandler");
var windows = fluid.registerNamespace("gpii.windows");
var spi = fluid.registerNamespace("gpii.windows.spi");

jqUnit.module("SpiSettingsHandler Module");

jqUnit.test("SpiSettingsHandler", function () {
    var testPayloads = ["testFilterKeys", "testMouse", "testMouseClickLock", "testLogFont", "testNonClientMetrics", "testStickyKeys", "testHighContrast"];
    
    var expectedCount = 0;
    for (var i = 0; i < testPayloads.length; ++i) {
        var payload = require(__dirname + "/" + testPayloads[i]);
        for (var property in payload.settings) {
            expectedCount++;
        }
        expectedCount++;
    }
    jqUnit.expect(expectedCount);
    
    for (var i = 0; i < testPayloads.length; ++i) {
        var name = testPayloads[i];
        var payload = require(__dirname + "/" + name);
        
        var expectedSettings = payload.settings;
        var oldSettings = windows.spiSettingsHandler.get(payload);
        var newSettings = spi.setOne(payload);
        
        for (var currentSetting in expectedSettings) {
            var expected = expectedSettings[currentSetting].value;
            
            jqUnit.assertEquals("Assert " + name + ": " + currentSetting, expected, newSettings[currentSetting].newValue);
            
            payload.settings[currentSetting].value = oldSettings[currentSetting];
        }
        
        spi.setOne(payload);
        
        jqUnit.assertDeepEq(name + " restored", oldSettings, windows.spiSettingsHandler.get(payload));
    }
});
