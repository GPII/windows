/*
 * GPII Windows 10 System Colors Settings Handler
 *
 * Copyright 2018 Raising the Floor - US
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

using System;
using System.Collections;
using System.Threading.Tasks;
using System.Runtime.InteropServices;

/**
 * Class containing the static methods for get/setting the desktop system colors.
 */
public static class WallpaperManager {
    public const int COLOR_DESKTOP = 1;

    // Functions for changing Windows desktop background colors
    [DllImport("user32.dll")]
    public static extern int SetSysColors(int cElements, int[] lpaElements, UInt32[] lpaRgbValues);

    [DllImport("user32.dll")]
    public static extern UInt32 GetSysColor(int index);

    public static int setSolidColor(UInt32 color) {
        // Set the new desktop solid color for the current session
        int[] elements = { COLOR_DESKTOP };
        UInt32[] colors = { color };

        return SetSysColors(elements.Length, elements, colors);
    }

    public static UInt32 getSolidColor() {
        return GetSysColor(COLOR_DESKTOP);
    }
}

public class Startup {
    public static bool isGet(Object[] input) {
        if (input.Length == 1) {
            bool isString = input[0].GetType() == typeof(System.String);

            return isString && ((String)input[0]) == "get";
        } else {
            return false;
        }
    }

    public static bool isSet(Object[] input) {
        if (input.Length == 2) {
            bool isString = input[0].GetType() == typeof(System.String);
            bool isNumber = input[1].GetType() == typeof(System.Int32);

            bool isSet = ((String)input[0]) == "set";

            return isString && isNumber && isSet;
        } else {
            return false;
        }
    }

    /*
     * Input parameter should be an array with two possible payload styles:
     *  - Get payload: ["get"]
     *  - Set payload: ["set", "value"]
     *
     * Returns:
     *  - Get: The value that is being queried, or negative error code in case of failing.
     *  - Set: The code of the result of the operation.
     *  - InvalidPayload: -1.
     */
    public async Task<object> Invoke(dynamic input) {
        try {
            if (isGet(input)) {
                return WallpaperManager.getSolidColor();
            } else if (isSet(input)) {
                UInt32 desiredColor = (UInt32) input[1];
                var setResCode = WallpaperManager.setSolidColor(desiredColor);

                return setResCode;
            } else {
                return -1;
            }
        } catch (Exception) {
            return -10;
        }
    }
}
