/*
 * Monitor brightness support for Windows
 *
 * Copyright 2016 Raising the Floor - US
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */
"use strict";

var fluid = require("universal");
var edge = require("edge");

var gpii = fluid.registerNamespace("gpii");
var windows = fluid.registerNamespace("gpii.windows");

fluid.registerNamespace("gpii.windows.display");

var getBrightness = edge.func({
    source: function() {/*
    using System;
    using System.Threading.Tasks;
    using System.Management;

    public class Startup {
        public async Task<object> Invoke(object input) {
            // Define scope (namespace)
            ManagementScope scope = new ManagementScope("root\\WMI");
            // Define query
            SelectQuery query = new SelectQuery("SELECT * FROM WmiMonitorBrightness");

            object itemRes = null;
            ManagementObjectSearcher searcher = new ManagementObjectSearcher(scope, query);
            ManagementObjectCollection objectCollection = searcher.Get();
            foreach (ManagementObject mObj in objectCollection) {
                foreach (var item in mObj.Properties) {
                    if(item.Name =="CurrentBrightness") {
                        itemRes = item.Value;
                    }
                }
            }
            return itemRes;
        }
    }
    */},
    references: ['System.Management.dll']
});


windows.display.getScreenBrightness = function() {
    var result;

    try {
        result = getBrightness(null, true);
    } catch(error) {
        if (error.ErrorCode == "NotSupported") {
            fluid.fail("windows.display.setBrightness is not supported in this environmment.");
        } else {
            fluid.fail("windows.display.setBrightness failed.");
        }
    }

    return result;
};

var setBrightness = edge.func({
    source: function() {/*
        using System;
        using System.Threading.Tasks;
        using System.Management;

        public class Startup {
            public async Task<object> Invoke(object input) {
                // Define scope (namespace)
                ManagementScope s = new ManagementScope("root\\WMI");
                // Define query
                SelectQuery q = new SelectQuery("WmiMonitorBrightnessMethods");

                ManagementObjectSearcher mos = new ManagementObjectSearcher(s, q);

                ManagementObjectCollection moc = mos.Get();

                object res = null;

                foreach (ManagementObject mObj in moc) {
                    res = mObj.InvokeMethod("WmiSetBrightness", new Object[] { UInt32.MaxValue, input }) as uint?;
                    break;
                }

                if (res == null) {
                    return  0;
                } else {
                    return res;
                }
            }
        }
    */},
    references: ['System.Management.dll']
});

windows.display.setScreenBrightness = function(value) {
    var result;

    try {
        result = setBrightness(value, true);
    } catch(error) {
        if (error.ErrorCode == "NotSupported") {
            fluid.fail("windows.display.setBrightness is not supported in this environmment.");
        } else {
            fluid.fail("windows.display.setBrightness failed with error: '" + error.message + "'");
        }
    }

    return result;
};
