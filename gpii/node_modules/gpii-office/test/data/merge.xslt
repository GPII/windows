<!--

# the expected xml documents generated by this (fix the double-dashes first):
for src in source.*.xml; do
  for target in target.*.xml; do
    xsltproc - -stringparam sourceFile $src - -stringparam targetFile $target merge.xslt <(echo '<a/>') \
        > $(echo "$target#$src" | sed -re 's,target\.(.*)\.xml#source\.(.*)\.xml,expect.\1+\2.xml,');
  done
done

-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:mso="http://schemas.microsoft.com/office/2009/07/customui">

    <xsl:param name="targetFile" select="''"/>
    <xsl:param name="sourceFile" select="''"/>
    <xsl:output method="xml" indent="yes"/>
    <xsl:strip-space elements="*"/>

    <xsl:template match="/">
        <xsl:comment>
            <xsl:value-of select="$sourceFile"/> + <xsl:value-of select="$targetFile"/>
        </xsl:comment>

        <xsl:variable name="targetDoc" select="document($targetFile)"/>
        <xsl:variable name="sourceDoc" select="document($sourceFile)"/>
        <xsl:variable name="targetTabs" select="$targetDoc/mso:customUI/mso:ribbon/mso:tabs/mso:tab"/>
        <xsl:variable name="sourceTabs" select="$sourceDoc/mso:customUI/mso:ribbon/mso:tabs/mso:tab"/>

        <xsl:element name="mso:customUI">
            <xsl:element name="mso:ribbon">
                <xsl:element name="mso:tabs">
                    <!-- write the target tabs -->
                    <xsl:for-each select="$targetTabs">
                        <xsl:variable name="targetID" select="@id"/>
                        <!-- select a matching tab in the source -->
                        <xsl:variable name="source" select="$sourceTabs[@id=$targetID]"/>
                        <xsl:choose>
                            <xsl:when test="$source">
                                <!-- use the target tab, but set the visible attribute to the source's value -->
                                <xsl:variable name="sourceVisible" select="$source/@visible" />
                                <xsl:copy>
                                    <xsl:attribute name="visible">
                                        <xsl:value-of select="$sourceVisible"/>
                                    </xsl:attribute>
                                    <xsl:copy-of select="@*[name(.)!='visible']|*"/>
                                </xsl:copy>
                            </xsl:when>
                            <xsl:otherwise>
                                <!-- no source tab, write the target tab -->
                                <xsl:copy-of select="." />
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:for-each>

                    <!-- write the source tabs that don't have a match in the target -->
                    <xsl:for-each select="$sourceTabs">
                        <xsl:variable name="id" select="@id"/>
                        <xsl:if test="not($targetTabs[@id=$id])">
                            <xsl:copy-of select="."/>
                        </xsl:if>
                    </xsl:for-each>
                </xsl:element>
            </xsl:element>
        </xsl:element>
    </xsl:template>

</xsl:stylesheet>
