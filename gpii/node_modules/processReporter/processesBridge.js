/*!
GPII Process Reporter processes bridge -- gpii.processes.

Copyright 2016 Inclusive Design Research Centre, OCAD University

Licensed under the New BSD license. You may not use this file except in
compliance with this License.

You may obtain a copy of the License at
https://github.com/gpii/universal/LICENSE.txt
*/

/*global require */

"use strict";

var path = require("path"),
    edge = require("edge"),
    fluid = require("universal");

var gpii = fluid.registerNamespace("gpii");
gpii.processes = fluid.registerNamespace("gpii.processes");

var dotNetProcesses = edge.func(path.join(__dirname, "dotNetProcesses.csx"));

fluid.defaults("gpii.processes.native", {
    gradeNames: ["fluid.component"],
    invokers: {
        getProcessList: {
            funcName: "gpii.processes.native.getProcessList",
            args: ["{arguments.0}"]  // process name, optional.
        }
    }
});

/**
 * Return a list of processes -- a snapshot of the current processes.  If the
 * process name or process id is passed, then the return value will be limited
 * to only processes with that name or the process with that pid.
 *
 * @param {String} or {Number} Optional.  The process identifier.
 */
gpii.processes["native"].getProcessList = function (processIdentifier) {
    return dotNetProcesses(processIdentifier, true);
};
