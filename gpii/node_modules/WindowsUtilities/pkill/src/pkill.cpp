#include "pkill.h"
#include <windows.h>
#include <process.h>
#include <Tlhelp32.h>
#include <winbase.h>

char tolower(char c) {
    return c + (c >= 'A' && c <= 'Z') * ('a' - 'A');
}

int equalsCaseInsensitive(const char* left, const char* rigth) {
	int i;

	for(i = 0; left[i] && tolower(left[i]) == tolower(rigth[i]); ++i);

	return !(left[i] || rigth[i]);
}

void killProcessByName(const char *filename) {
    HANDLE hSnapShot = CreateToolhelp32Snapshot(TH32CS_SNAPALL, NULL);
    PROCESSENTRY32 pEntry;
    pEntry.dwSize = sizeof (pEntry);
    BOOL hRes = Process32First(hSnapShot, &pEntry);

    while (hRes) {
        if (equalsCaseInsensitive(pEntry.szExeFile, filename)) {
            HANDLE hProcess = OpenProcess(PROCESS_TERMINATE, 0, (DWORD) pEntry.th32ProcessID);
            if (hProcess != NULL) {
                TerminateProcess(hProcess, 9);
                CloseHandle(hProcess);
            }
        }
        hRes = Process32Next(hSnapShot, &pEntry);
    }

    CloseHandle(hSnapShot);
}
