/*
 * Install on Demand.
 *
 * Copyright 2018 Raising the Floor - International
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The R&D leading to these results received funding from the
 * Department of Education - Grant H421A150005 (GPII-APCP). However,
 * these results do not necessarily represent the policy of the
 * Department of Education, and you should not assume endorsement by the
 * Federal Government.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("gpii-universal");

var gpii = fluid.registerNamespace("gpii");
fluid.registerNamespace("gpii.windows.iod");

fluid.defaults("gpii.windows.iod", {
    gradeNames: ["fluid.component"],

    components: {
        "chocolatey": {
            type: "gpii.windows.iod.chocolateyInstaller"
        }
    },
    invokers: {
        installPackageWindows: {
            funcName: "gpii.windows.iod.installPackage",
            args: ["{that}", "{arguments}.0"]
        }
    },
    listeners: {
        "onRequirePackage.install.os": {
            func: "{that}.installPackageWindows",
            priority: "after:install"
        }
    }
});

/**
 * Installs a package
 *
 * @param that {Component} The gpii.windows.iod instance.
 * @param packageFile
 */
gpii.windows.iod.installPackage = function (that, installation) {
    fluid.log("IoD.win: Installing package " + installation.packageInfo.filename);
    return installation;
};
