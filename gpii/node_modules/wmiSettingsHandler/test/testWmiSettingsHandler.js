/*
 * WmiSetttingsHandler Tests
 *
 * Copyright 2016 Raising the Floor - US
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("gpii-universal"),
    jqUnit = fluid.require("node-jqunit"),
    gpii = fluid.registerNamespace("gpii");

require("../src/WmiSettingsHandler.js");

jqUnit.module("WmiSettingsHandler Module");

jqUnit.test("Testing setScreenBrightness ", function () {
    if (gpii.windows.wmi.isBrightnessSupported()) {
        // Get old brightness
        var oldBrightness = gpii.windows.wmi.getScreenBrightness();
        // Set different brightness levels for testing
        var levels = [0, 25, 50, 75, 100];
        // Set past iteration brightness
        var pastItBrightness = oldBrightness;
        levels.forEach(function (newBrightness) {
            // Set new brightness and check has been changed
            gpii.windows.wmi.setScreenBrightness(newBrightness);
            var curBrightness = gpii.windows.wmi.getScreenBrightness();
            jqUnit.assert("New brightness should be different to old one.", curBrightness !== pastItBrightness);

            // Check that new brightness is in acceptable range
            var inMargin = (newBrightness + 5) > curBrightness && (newBrightness - 5) < curBrightness;
            jqUnit.assert("Brightness is the same as the setted new one.", inMargin);

            // Store this iteration brightness
            pastItBrightness = pastItBrightness;
        });

        // Restore old brightness
        gpii.windows.wmi.setScreenBrightness(oldBrightness);
    } else {
        fluid.log(fluid.logLevel.WARN, "Expected Error: setScreenBrightness test lacks validity, screenBrightness is not supported on the system");
        jqUnit.assert("Test passed without doing meaningfull job, screenBrightness is not supported on the system", true);
    }
});

jqUnit.test("Testing displaySettingsHandler setScreenBrightnessWithPayload", function () {
    if (gpii.windows.wmi.isBrightnessSupported()) {
        // Getting old settings
        var oldPayload = gpii.windows.wmi.getImpl();

        // Creating new brightness payload
        var newBrightness = 50;
        var payload = { settings: {"screen-brightness": newBrightness }};

        // Setting new brightness
        gpii.windows.wmi.setImpl(payload);

        // Checking if new brightness has been set
        var curBrightness = gpii.windows.wmi.getScreenBrightness();
        var inMargin = (newBrightness + 5) > curBrightness && (newBrightness - 5) < curBrightness;
        jqUnit.assert("Brightness is the same as the setted new one.", inMargin);

        // Restoring all brightness
        var oldPayloadVal = parseInt(oldPayload["screen-brightness"]);
        gpii.windows.wmi.setScreenBrightness(oldPayloadVal);
    } else {
        fluid.log(fluid.logLevel.WARN, "Expected Error: setScreenBrightnessWithPayload test lacks validity, screenBrightness is not supported on the system");
        jqUnit.assert("Test passed without doing meaningfull job, screenBrightness is not supported on the system", true);
    }
});
