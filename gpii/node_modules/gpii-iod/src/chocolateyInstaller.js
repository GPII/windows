/*
 * Chocolatey installer for IoD.
 *
 * Copyright 2018 Raising the Floor - International
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The R&D leading to these results received funding from the
 * Department of Education - Grant H421A150005 (GPII-APCP). However,
 * these results do not necessarily represent the policy of the
 * Department of Education, and you should not assume endorsement by the
 * Federal Government.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("infusion");
var gpii = fluid.registerNamespace("gpii");
fluid.registerNamespace("gpii.windows.iod.chocolatey");

// Installs chocolatey packages
fluid.defaults("gpii.windows.iod.chocolateyInstaller", {
    gradeNames: ["fluid.component", "gpii.iod.windows.packageInstaller"],

    invokers: {
        installPackage: {
            funcName: "gpii.windows.iod.chocolatey.installPackage",
            args: ["{that}", "{serviceHandler}", "{arguments}.0"]
        },
        uninstallPackage: {
            funcName: "gpii.windows.iod.chocolatey.uninstallPackage",
            args: ["{that}", "{serviceHandler}", "{arguments}.0"]
        }
    },

    packageTypes: "chocolatey"
});

/**
 * Invokes chocolatey.
 *
 * @param {Component} service - The service handler instance.
 * @param {Array<String>} args - An array of arguments to pass to the choco command.
 * @return {Promise} Resolves - when complete.
 */
gpii.windows.iod.chocolatey.invoke = function (service, args) {
    var promise = fluid.promise();

    fluid.log("IoD: Executing: choco " + args.join(" "));
    service.requestSender.execute("choco", args, {
        wait: true,
        capture: true
    }).then(function (result) {
        fluid.log(result);
        promise.resolve();
    }, function (err) {
        promise.reject({
            isError: true,
            message: "Chocolatey failed to run",
            error: err
        });
    });

    return promise;
};

/**
 * Install the package.
 *
 * @param {Component} that - The packageInstaller instance.
 * @param {Component} service - The service handler instance.
 * @return {Promise} Resolves when the action is complete.
 */
gpii.windows.iod.chocolatey.installPackage = function (that, service) {
    fluid.log("IoD.choco: Installing package " + that.installation.localPackage);

    var args = [ "install", "-y", that.installation.localPackage];
    return gpii.windows.iod.chocolatey.invoke(service, args);
};

/**
 * Uninstall the package.
 *
 * @param {Component} that The packageInstaller instance.
 * @param {Component} service The service handler instance.
 * @return {Promise} Resolves when the action is complete.
 */
gpii.windows.iod.chocolatey.uninstallPackage = function (that, service) {
    fluid.log("IoD.choco: Uninstalling package " + that.installation.localPackage);

    var args = [ "uninstall", "-y", that.installation.packageName];
    return gpii.windows.iod.chocolatey.invoke(service, args);
};


